==3992== Memcheck, a memory error detector
==3992== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3992== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3992== Command: ./amplify IMAGES/Lenna_org_1024.pgm 11 1.1 2
==3992== Parent PID: 2217
==3992== 
==3992== Invalid read of size 4
==3992==    at 0x4043B0: vertical_edge_keeping(float*, float*, float*, int, int, int, float*, float*) (amplify.h:355)
==3992==    by 0x40157D: main (main.c:120)
==3992==  Address 0xaeaf040 is 0 bytes after a block of size 4,194,304 alloc'd
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x40134E: main (main.c:77)
==3992== 
==3992== Invalid read of size 4
==3992==    at 0x4047A2: vertical_edge_keeping(float*, float*, float*, int, int, int, float*, float*) (amplify.h:358)
==3992==    by 0x40157D: main (main.c:120)
==3992==  Address 0xaeaf044 is 4 bytes after a block of size 4,194,304 alloc'd
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x40134E: main (main.c:77)
==3992== 
==3992== Invalid read of size 4
==3992==    at 0x405261: horizontal_edge_keeping(float*, float*, float*, int, int, int, float*, float*) (amplify.h:178)
==3992==    by 0x4015B8: main (main.c:123)
==3992==  Address 0xaeaf040 is 0 bytes after a block of size 4,194,304 alloc'd
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x40134E: main (main.c:77)
==3992== 
==3992== Conditional jump or move depends on uninitialised value(s)
==3992==    at 0x40171F: main (main.c:138)
==3992== 
==3992== Conditional jump or move depends on uninitialised value(s)
==3992==    at 0x401728: main (main.c:138)
==3992== 
==3992== Conditional jump or move depends on uninitialised value(s)
==3992==    at 0x401C62: main (main.c:144)
==3992== 
==3992== Conditional jump or move depends on uninitialised value(s)
==3992==    at 0x401C67: main (main.c:144)
==3992== 
==3992== Conditional jump or move depends on uninitialised value(s)
==3992==    at 0x401C92: main (main.c:145)
==3992== 
==3992== Conditional jump or move depends on uninitialised value(s)
==3992==    at 0x401CAA: main (main.c:145)
==3992== 
==3992== 
==3992== More than 10000000 total errors detected.  I'm not reporting any more.
==3992== Final error counts will be inaccurate.  Go fix your program!
==3992== Rerun with --error-limit=no to disable this cutoff.  Note
==3992== that errors may occur in your program without prior warning from
==3992== Valgrind, because errors are no longer being displayed.
==3992== 
==3992== 
==3992== HEAP SUMMARY:
==3992==     in use at exit: 50,405,372 bytes in 11 blocks
==3992==   total heap usage: 89 allocs, 78 frees, 118,633,772 bytes allocated
==3992== 
==3992== 16 bytes in 1 blocks are definitely lost in loss record 1 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x4028BB: mean_keeping(float*, float*, int, int, int, float*, float*, float*) (amplify.h:34)
==3992==    by 0x4017E5: main (main.c:158)
==3992== 
==3992== 36 bytes in 1 blocks are definitely lost in loss record 2 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x40289D: mean_keeping(float*, float*, int, int, int, float*, float*, float*) (amplify.h:32)
==3992==    by 0x4017E5: main (main.c:158)
==3992== 
==3992== 484 bytes in 1 blocks are definitely lost in loss record 3 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x4011E0: main (main.c:60)
==3992== 
==3992== 484 bytes in 1 blocks are definitely lost in loss record 4 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x4011EB: main (main.c:61)
==3992== 
==3992== 72,704 bytes in 1 blocks are still reachable in loss record 5 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==3992==    by 0x40106B9: call_init.part.0 (dl-init.c:72)
==3992==    by 0x40107CA: call_init (dl-init.c:30)
==3992==    by 0x40107CA: _dl_init (dl-init.c:120)
==3992==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==3992==    by 0x4: ???
==3992==    by 0xFFF0001B2: ???
==3992==    by 0xFFF0001BC: ???
==3992==    by 0xFFF0001D6: ???
==3992==    by 0xFFF0001D9: ???
==3992==    by 0xFFF0001DD: ???
==3992== 
==3992== 4,194,304 bytes in 1 blocks are possibly lost in loss record 6 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x40138E: main (main.c:80)
==3992== 
==3992== 4,194,304 bytes in 1 blocks are possibly lost in loss record 7 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x402214: double_thresh(float*, float*, int, int) (main.h:127)
==3992==    by 0x40150E: main (main.c:109)
==3992== 
==3992== 4,194,304 bytes in 1 blocks are definitely lost in loss record 8 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x400E52: read_image_template<float> (image_template.h:38)
==3992==    by 0x400E52: main (main.c:48)
==3992== 
==3992== 4,194,304 bytes in 1 blocks are definitely lost in loss record 9 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x40136E: main (main.c:79)
==3992== 
==3992== 16,777,216 bytes in 1 blocks are possibly lost in loss record 10 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x401301: main (main.c:74)
==3992== 
==3992== 16,777,216 bytes in 1 blocks are definitely lost in loss record 11 of 11
==3992==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3992==    by 0x401330: main (main.c:75)
==3992== 
==3992== LEAK SUMMARY:
==3992==    definitely lost: 25,166,844 bytes in 7 blocks
==3992==    indirectly lost: 0 bytes in 0 blocks
==3992==      possibly lost: 25,165,824 bytes in 3 blocks
==3992==    still reachable: 72,704 bytes in 1 blocks
==3992==         suppressed: 0 bytes in 0 blocks
==3992== 
==3992== For counts of detected and suppressed errors, rerun with: -v
==3992== Use --track-origins=yes to see where uninitialised values come from
==3992== ERROR SUMMARY: 10000010 errors from 19 contexts (suppressed: 0 from 0)
